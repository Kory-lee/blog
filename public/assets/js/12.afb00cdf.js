(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{340:function(t,s,a){"use strict";a.r(s);var n=a(3),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"如何产生闭包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何产生闭包"}},[t._v("#")]),t._v(" 如何产生闭包")]),t._v(" "),a("p",[t._v("当一个嵌套的内部(子)函数引用了嵌套的外部(父)函数的变量(函数)时,就产生了闭包")]),t._v(" "),a("h2",{attrs:{id:"闭包到底是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包到底是什么"}},[t._v("#")]),t._v(" 闭包到底是什么")]),t._v(" "),a("blockquote",[a("p",[t._v("用 chrome 可以查看")])]),t._v(" "),a("ul",[a("li",[t._v("理解一: 闭包是嵌套的内部函数(绝大多数人)")]),t._v(" "),a("li",[t._v("理解二:包含被引用变量(函数)的对象(极少数人)")]),t._v(" "),a("li",[t._v("注意: 闭包存在于嵌套的内部函数中")])]),t._v(" "),a("h2",{attrs:{id:"产生闭包的条件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#产生闭包的条件"}},[t._v("#")]),t._v(" 产生闭包的条件")]),t._v(" "),a("ul",[a("li",[t._v("函数嵌套")]),t._v(" "),a("li",[t._v("内部函数引用了外部函数的数据\n"),a("ul",[a("li",[a("strong",[t._v("执行内部函数定义就会产生闭包(不用调用函数)")])])])])]),t._v(" "),a("blockquote",[a("p",[t._v("虽然引入变量也能产生闭包,但是不能产生实际效果。")])]),t._v(" "),a("h2",{attrs:{id:"常见的闭包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见的闭包"}},[t._v("#")]),t._v(" 常见的闭包")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("将函数作为另一个函数的返回值")])]),t._v(" "),a("li",[a("p",[t._v("将函数作为实参传递给另一个函数调用")]),t._v(" "),a("ol",[a("li",[a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("showDelay")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" time")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])])])])])]),t._v(" "),a("h2",{attrs:{id:"闭包的作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包的作用"}},[t._v("#")]),t._v(" 闭包的作用")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("使用函数内部的变量在执行函数之后,仍然存活在内存中(延长了局部变量的生命周期)")])]),t._v(" "),a("li",[a("p",[t._v("让函数外部可以操作(读写)到函数内部的变量(变量/函数)")]),t._v(" "),a("p",[a("strong",[t._v("问题:")])]),t._v(" "),a("ol",[a("li",[a("p",[t._v("函数执行完后，函数内部声明的局部变量是否还存在？")]),t._v(" "),a("ul",[a("li",[t._v("一般不存在，存在于闭包中的变量才可能存在")])])])])])]),t._v(" "),a("h2",{attrs:{id:"闭包的生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包的生命周期"}},[t._v("#")]),t._v(" 闭包的生命周期")]),t._v(" "),a("ol",[a("li",[t._v("产生: 在嵌套内部函数定义执行完时就产生了(不是在调用的时候)")]),t._v(" "),a("li",[t._v("死亡: 在嵌套的内部函数成为垃圾对象时")])]),t._v(" "),a("h2",{attrs:{id:"闭包的应用-定义js模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包的应用-定义js模块"}},[t._v("#")]),t._v(" 闭包的应用:定义"),a("code",[t._v("js")]),t._v("模块")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("具有特定功能的"),a("code",[t._v("js")]),t._v("文件")])]),t._v(" "),a("li",[a("p",[t._v("将所有的数据和功能封装在一个函数内部(私有的)")])]),t._v(" "),a("li",[a("p",[t._v("只向外暴露一个包含 n 个方法的对象或函数")])]),t._v(" "),a("li",[a("p",[t._v("模块的使用者,只需要通过模块暴露的对象调用方法")]),t._v(" "),a("p",[a("strong",[t._v("最优应用")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("window")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//防止后面向外暴露方法的window被压缩")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//私有数据")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" msg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'My atguigu'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//操作数据的函数")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'doSomething()'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toUpperCase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("doOtherthing")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'doOtherthing()'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLowerCase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mymodule "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 向外暴露对象(给外部使用的方法)")]),t._v("\n    doSomething"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" doSomething"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    doOtherthing"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" doOtherthing\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br")])])])]),t._v(" "),a("h2",{attrs:{id:"闭包的缺点及解决"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包的缺点及解决"}},[t._v("#")]),t._v(" 闭包的缺点及解决")]),t._v(" "),a("ol",[a("li",[t._v("缺点\n"),a("ol",[a("li",[t._v("函数执行完后，函数内的局部变量没有释放，占用内存时间会变长")]),t._v(" "),a("li",[t._v("容易造成内存泄漏")])])]),t._v(" "),a("li",[t._v("解决\n"),a("ol",[a("li",[t._v("能不用就不用闭包")]),t._v(" "),a("li",[t._v("及时释放"),a("code",[t._v("f =null")]),t._v("//让内部函数成为垃圾对象--\x3e回收闭包")])])])]),t._v(" "),a("h3",{attrs:{id:"内存溢出与内存泄漏"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内存溢出与内存泄漏"}},[t._v("#")]),t._v(" 内存溢出与内存泄漏")]),t._v(" "),a("ol",[a("li",[t._v("内存溢出\n"),a("ul",[a("li",[t._v("一种程序运行出现的错误")]),t._v(" "),a("li",[t._v("当程序运行需要的内存超过了剩余的内存时,就抛出内存溢出的错误")])])]),t._v(" "),a("li",[t._v("内存泄漏\n"),a("ul",[a("li",[t._v("占用的内存没有及时释放")]),t._v(" "),a("li",[t._v("内存泄漏积累多了就容易导致内存溢出")]),t._v(" "),a("li",[t._v("常见的内存泄漏\n"),a("ul",[a("li",[t._v("意外的全局变量")]),t._v(" "),a("li",[t._v("没有及时清理的计时器或回调函数")]),t._v(" "),a("li",[t._v("闭包")])])])])])]),t._v(" "),a("h2",{attrs:{id:"两种垃圾回收策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#两种垃圾回收策略"}},[t._v("#")]),t._v(" 两种垃圾回收策略")]),t._v(" "),a("p",[t._v("找出那些不再继续使用的变量，然后释放其内存。垃圾回收器会按照固定的时间间隔，周期性的执行该垃圾回收操作。")]),t._v(" "),a("p",[t._v("共有两种策略：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("标记清除法")])]),t._v(" "),a("li",[a("strong",[t._v("引用计数法")])])]),t._v(" "),a("h3",{attrs:{id:"标记清除法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标记清除法"}},[t._v("#")]),t._v(" 标记清除法")]),t._v(" "),a("p",[t._v("垃圾回收器会在运行的时候，会给存储在内存中的所有变量都加上标记，然后它会去掉环境中变量以及被环境中的变量引用的变量的标记。剩下的就视为即将要删除的变量，原因是在环境中无法访问到这些变量了。最后垃圾回收器完成内存清除操作。")]),t._v(" "),a("p",[a("strong",[t._v("它的实现原理就是通过判断一个变量是否在执行环境中被引用，来进行标记删除。")])]),t._v(" "),a("h3",{attrs:{id:"引用计数法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引用计数法"}},[t._v("#")]),t._v(" 引用计数法")]),t._v(" "),a("p",[t._v("引用计数的垃圾收集策略不常用，引用计数的最基本含义就是跟踪记录每个值被引用的次数。")]),t._v(" "),a("p",[t._v("当声明变量并将一个引用类型的值赋值给该变量时，则这个值的引用次数加 1，同一值被赋予另一个变量，该值的引用计数加 1 。当引用该值的变量被另一个值所取代，则引用计数减 1，当计数为 0 的时候，说明无法在访问这个值了，所有系统将会收回该值所占用的内存空间。")]),t._v(" "),a("p",[a("strong",[t._v("存在的缺陷：")])]),t._v(" "),a("p",[t._v("两个对象的相互循环引用，在函数执行完成的时候，两个对象相互的引用计数并未归 0 ，而是依然占据内存，无法回收，当该函数执行多次时，内存占用就会变多，导致大量的内存得不到回收。")]),t._v(" "),a("blockquote",[a("p",[t._v("最常见的就是在 IE BOM 和 DOM 中，使用的对象并不是 js 对象，所以垃圾回收是基于计数策略的。但是在 IE9 已经将 BOM 和 DOM 真正的转化为了 js 对象，所以循环引用的问题得到解决。")])]),t._v(" "),a("h2",{attrs:{id:"如何管理内存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何管理内存"}},[t._v("#")]),t._v(" 如何管理内存")]),t._v(" "),a("p",[t._v("虽然说是 "),a("code",[t._v("js")]),t._v(" 的内存都是自动管理的，但是对于 "),a("code",[t._v("js")]),t._v(" 还是存在一些问题的，最主要的一个问题就是"),a("strong",[t._v("分配给 Web 浏览器的可用内存数量通常比分配给桌面应用程序的少")]),t._v("。")]),t._v(" "),a("blockquote",[a("p",[t._v("为了能够让页面获得最好的性能，必须确保 js 变量占用最少的内存，最好的方式就是将不用的变量引用释放掉，也叫做"),a("strong",[t._v("解除引用")]),t._v("。")])]),t._v(" "),a("ul",[a("li",[t._v("对于局部变量来说，函数执行完成离开环境变量，变量将自动解除。")]),t._v(" "),a("li",[t._v("对于全局变量我们需要进行手动解除。（注意：解除引用并不意味被收回，而是将变量真正的脱离执行环境，下一次垃圾回收将其收回）")])]),t._v(" "),a("blockquote",[a("p",[t._v("补充：因为通过上边的垃圾回收机制的标记清除法的原理得知，只有与环境变量失去引用的变量才会被标记回收，所用上述例子通过将对象的引用设置为 null ，此变量也就失去了引用，等待被垃圾回收器回收。")])])])}),[],!1,null,null,null);s.default=r.exports}}]);